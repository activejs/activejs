# @active/core Release workflow

name: core-Release

on:
  push:
    branch: [master]
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - uses: actions/cache@v2
        id: node-modules-cache
        env:
          cache-name: activejs-core-ci-node-modules-cache
        with:
          path: '**/node_modules'
          key: node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lint
        run: npm run lint:core

      - name: Extract version tag
        id: version-tag
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}

      - name: Make sure the tag matches the npm version
        run: npm --no-git-tag-version --allow-same-version version ${{ steps.version-tag.outputs.version }}

      - name: Build Core and AJS Website
        run: npm run build

      - name: Build Core API Docs
        run: npm run docs:build

      - name: Test
        run: npm run test:core

      - name: Zip artifacts
        run: |
          mv docs dist/core-api-docs
          cd dist
          zip -r ${{ steps.version-tag.outputs.version }}.zip ajs core core-api-docs
          cd ..

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version-tag.outputs.version }}
          release_name: ${{ steps.version-tag.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ steps.version-tag.outputs.version }}.zip
          asset_name: ${{ steps.version-tag.outputs.version }}.zip
          asset_content_type: application/zip
